<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = room_width * .5;
timeline = global.statistics[?"timeline"];
time = ds_map_find_value(timeline[|ds_list_size(timeline) - 1],"time");
time_str = scr_time_to_string(time);
timeline_sz = ds_list_size(timeline);
line_width = room_width - 20;
death_str = "DEATHS: " + string(ds_map_find_value(global.statistics[?"death"],"total"));
deadliest_room_str = ds_map_find_value(global.statistics[?"death"],"deadliest room");
vertical_padding = 10;
timeline_width = 0;
timeline_max_width = room_width - 20;
timeline_increment = timeline_max_width / (room_speed * 5);
time_between_lines = room_speed * 2;
time_passed = 0;
show_line = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if show_line = 0
{
    if ++time_passed &lt; time_between_lines
        exit
    else if time_passed = time_between_lines
    {
        obj_controller.screenshake = 1
        time_between_lines += room_speed
        show_line = 1
    }
}
    
    
draw_set_halign(fa_center)
var yy = vertical_padding
draw_text(x,yy,death_str)

if show_line = 1
{
    if ++time_passed &lt; time_between_lines
        exit
    else if time_passed = time_between_lines
    {
        obj_controller.screenshake = 1
        time_between_lines += room_speed * 6
        show_line = 2
    }
}
    
yy += vertical_padding
draw_text(x,yy,"TIME: " + string(time_str))
yy += vertical_padding
timeline_width = min(timeline_width + timeline_increment, timeline_max_width)
draw_line_width(10,yy,10 + timeline_width,yy,4)
for(var i = 0; i &lt; timeline_sz; ++i)
{
    var event = timeline[|i]
    var xpos = (event[?"time"] / time) * line_width
    if timeline_width &lt; xpos
        break
    xpos += 10
    switch(event[?"source"])
    {
        case "aegis":
            draw_rectangle_colour(xpos, yy, xpos + 1, yy + 1,c_fuchsia,c_fuchsia,c_fuchsia,c_fuchsia,false)
        break;
        case "hopmonger":
            var col = make_color_rgb(0,162,232)
            draw_rectangle_colour(xpos, yy, xpos + 1, yy + 1,col,col,col,col,false)
        break;
        case "mongwraith":
            draw_rectangle_colour(xpos, yy, xpos + 1, yy + 1,c_black,c_black,c_black,c_black,false)
        break;
        case "bozostatue":
            draw_rectangle_colour(xpos, yy - 1, xpos + 1, yy,c_red,c_red,c_red,c_red,false)
            draw_rectangle_colour(xpos - 1, yy + 1, xpos, yy + 2,c_blue,c_blue,c_blue,c_blue,false)
            draw_rectangle_colour(xpos + 1, yy + 1, xpos + 2, yy + 2,c_yellow,c_yellow,c_yellow,c_yellow,false)
        break;
        default: 
            draw_line(xpos,yy - 5,xpos,yy + 5)
    }
}

if show_line = 2
{
    if ++time_passed &lt; time_between_lines
        exit
    else if time_passed = time_between_lines
    {
        obj_controller.screenshake = 1
        time_between_lines += room_speed
        show_line = 3
    }
}
    
yy += vertical_padding
draw_text(x,yy,"DEADLIEST ROOM")
yy += vertical_padding
draw_text(x,yy,deadliest_room_str)

if show_line = 3
{
    if ++time_passed &lt; time_between_lines
        exit
    else if time_passed = time_between_lines
    {
        obj_controller.screenshake = 1
        time_between_lines += room_speed
        show_line = 4
    }
}

yy += vertical_padding
draw_text(x,yy,"THANKS FOR PLAYING!")


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
