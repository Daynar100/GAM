<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hopmonger</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>aggro = false;
phase = 1;
yspd = 0;
vibrate = 0;

hopHeight = 10;
jumps = 0;
spinAnim = 0;
image_speed = 0;
hopDirection = 1;
hopReady = false;
obj_controller.screenshake = 0;

if (obj_controller.hopmongerDefeated == true)
{
    instance_destroy();
    with instance_create(8, 48, obj_spawnwall) {image_index = 3};
    with instance_create(24, 32, obj_spawnwall) {image_index = 3};
    with instance_create(8, 16, obj_spawnwall) {image_index = 3};
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_controller.hopmongerDefeated = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hopReady = false;
yspd = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (jumps &gt;= 3)
{
    phase = 2;
    jumps = 0;
}
else
{
    if instance_exists(obj_player) 
    {
        hopDirection = sign(obj_player.x - x);
    }
    hopReady = false;
    yspd = -hopHeight;
    jumps++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scr_contactdamage</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (aggro = false &amp;&amp; obj_player.x &lt; 90)
{
    aggro = true;
    obj_controller.bossMaxHP = 1;
    obj_controller.bossHP = 1;
    obj_controller.HPAnim = 0;
    instance_create(8, 0, obj_spawnwall);
    instance_create(16, 0, obj_spawnwall);
    instance_create(24, 0, obj_spawnwall);
    instance_create(112, 56, obj_spawnwall);
    instance_create(112, 64, obj_spawnwall);
}

if aggro = true

{
    //Phase 1
    
    if (phase = 1)
    {
        if (!place_free(x, y+1) &amp;&amp; hopReady = false &amp;&amp; yspd = 0)
        {
            alarm[0] = 65;
            hopReady = true;
            obj_controller.screenshake = 1;
        }
    
        if (x &lt;= 0) or (x &gt;= 120)
        {
            hopDirection *= -1;
        }
        
        image_xscale = hopDirection;
    }
    
    //Phase 2
    
    if (phase = 2)
    {
        if hopReady = true
        {
            y -= 1;
            spinAnim ++;
            if spinAnim = 2
            {
                spinAnim = 0;
                image_angle += 90;
            }
            if instance_exists(obj_player) 
            {
                hopDirection = sign(obj_player.x - x);
                if (place_free(x + sign(obj_player.x - x), y))
                {
                    x += sign(obj_player.x - x);
                }
                image_xscale = hopDirection;
            }
            yspd = 0;
        }
        
        if (y &lt;= 16 &amp;&amp; hopReady = true)
        {
            alarm[1] = 40;
            if (instance_exists(obj_player))
            {
                hopDirection = sign(obj_player.x - x);
            }
            hopReady = false;
            image_angle = 0;
        }
        
        if (hopReady = false &amp;&amp; !place_free(x, y + 1))
        {
            phase = 1;
            instance_create(x + 6, y, obj_hopshot);
            with instance_create(x - 6, y, obj_hopshot)
            {
                image_xscale = -1;
            }
            if (instance_exists(obj_player))
            {
                hopDirection = sign(obj_player.x - x);
            }
            alarm[0] = 80;
            hopReady = true;
            yspd = 0;
            obj_controller.screenshake = 3;
        }
    }
    
    //Universal Code
    
    if (place_free(x, y+1))
    {
        if yspd &lt; 10
        {
            yspd += 1;
        }
        if (phase = 1)
        {
            x += hopDirection;
        }
        image_index = 1;
    }
    else
    {
        if (yspd &gt; 0)
        {
            yspd = 0;
        }
        image_index = 0;
    }
        
    if yspd != 0
    {
        for(i = 0; i != yspd + sign(yspd); i += sign(yspd))
        {
            if place_free(x, y + (i / 10))
            {
                y += i / 10;
            }
        }
    }
    
    if (hopDirection = 0)
    {
        hopDirection = 1;
        image_xscale = hopDirection;
    }
}

if obj_controller.screenshake &gt; 0 
{
    obj_controller.screenshake -= 0.1;
}

x = round(x);
y = round(y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_lava1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x, y, obj_hopmongercorpse);
obj_controller.bossHP = 0;
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hopDirection *= -1;
x+= hopDirection;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
